import discord
from discord.ext import commands
from gtts import gTTS
import asyncio
import os
import time
import platform
from keep_alive import keep_alive

# ================= CONFIG =================
TOKEN = os.getenv("DISCORD_TOKEN")
PREFIX = "!"
SPAM_DELAY = 1  # Th·ªùi gian t·ªëi thi·ªÉu gi·ªØa 2 l·∫ßn !talk

# T·ª± ph√°t hi·ªán ƒë∆∞·ªùng d·∫´n FFMPEG
if platform.system() == "Windows":
    FFMPEG_PATH = os.path.join(os.path.dirname(__file__), "bin", "ffmpeg.exe")
else:
    FFMPEG_PATH = "ffmpeg"  # Linux (Render) s·∫Ω d√πng ffmpeg c√†i s·∫µn
# ===========================================

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
intents.members = True

bot = commands.Bot(command_prefix=PREFIX, intents=intents)

# L∆∞u th·ªùi gian cu·ªëi c√πng m·ªói user d√πng !talk
last_talk_time = {}

# ======= L·ªÜNH TALK =======
@bot.command()
async def talk(ctx, *, text: str):
    now = time.time()
    last_time = last_talk_time.get(ctx.author.id, 0)

    # Ch·ªëng spam
    if now - last_time < SPAM_DELAY:
        await ctx.send(f"‚è≥ Vui l√≤ng ƒë·ª£i {SPAM_DELAY} gi√¢y gi·ªØa c√°c l·∫ßn !talk")
        return
    last_talk_time[ctx.author.id] = now

    # Ki·ªÉm tra user c√≥ trong voice kh√¥ng
    if ctx.author.voice is None:
        await ctx.send("‚ùå B·∫°n ph·∫£i ·ªü trong voice channel ƒë·ªÉ d√πng l·ªánh n√†y.")
        return

    voice_channel = ctx.author.voice.channel

    # N·∫øu bot ch∆∞a join th√¨ join
    if ctx.voice_client is None:
        await voice_channel.connect()
    elif ctx.voice_client.channel != voice_channel:
        await ctx.voice_client.move_to(voice_channel)

    # T·∫°o file √¢m thanh t·ª´ vƒÉn b·∫£n
    file_path = os.path.join(os.path.dirname(__file__), "tts.mp3")
    tts = gTTS(text=text, lang="vi")
    tts.save(file_path)

    # Ph√°t √¢m thanh
    vc = ctx.voice_client
    if vc.is_playing():
        vc.stop()
    vc.play(discord.FFmpegPCMAudio(executable=FFMPEG_PATH, source=file_path))
    await ctx.send(f"üó£Ô∏è Bot ƒëang n√≥i: **{text}**")

@bot.command()
async def leave(ctx):
    if ctx.voice_client is not None:
        await ctx.voice_client.disconnect()
        await ctx.send("üëã Bot ƒë√£ r·ªùi voice channel.")

keep_alive()
bot.run(TOKEN)
